{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-33059328-1","tagline":"Maybe you should stop checking for nil and be confident","name":"Maybelline","body":"[![Build Status](http://travis-ci.org/blatyo/maybelline.png)](http://travis-ci.org/blatyo/maybelline)\r\n\r\nAn implementation of the [maybe monad][1].\r\n\r\n[1]: http://en.wikipedia.org/wiki/Monad_(functional_programming)#The_Maybe_monad\r\n\r\n## Setup\r\n\r\n**Gemfile**\r\n``` ruby\r\ngem 'maybelline'\r\n```\r\n\r\n**Manual**\r\n``` ruby\r\nrequire 'maybelline'\r\n```\r\n\r\n## Usage\r\n\r\nSay you have some objects like the ones below:\r\n\r\n``` ruby\r\nrequire 'ostruct'\r\n\r\ndata = {\r\n  \"neat\" => {\r\n    \"super\" => \"cool\",\r\n    \"lame\"  => nil\r\n  }\r\n}\r\n\r\nobject = OpenStruct.new(data)\r\nobject.neat = OpenStruct.new(object.neat)\r\n```\r\n\r\nIf any method in the chain of calls returns nil, the block will return nil.\r\n\r\n``` ruby\r\nMaybe(data){|d| d[\"this_key_doesnt_exist\"][\"this_key_wont_get_called\"]} #=> nil\r\ndata.maybe{|d| d[\"this_key_doesnt_exist\"][\"this_key_wont_get_called\"]}  #=> nil\r\nobject.maybe{|o| o.neat.lame.this_method_never_gets_called}             #=> nil\r\n```\r\n\r\nIf it is successful, it will return the value.\r\n\r\n``` ruby\r\ndata.maybe{|d| d[\"neat\"][\"super\"]}  #=> \"cool\"\r\nobject.maybe{|o| o.neat.super}      #=> \"cool\"\r\n```\r\n\r\n## Note on Reporting Issues\r\n\r\n* Try to make a failing test case\r\n* Tell me which version of ruby you're using\r\n* Tell me which OS you are using\r\n* Provide me with any extra files if necessary\r\n\r\n## Note on Patches/Pull Requests\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches."}